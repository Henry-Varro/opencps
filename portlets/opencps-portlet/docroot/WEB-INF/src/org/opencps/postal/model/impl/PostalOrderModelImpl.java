/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package org.opencps.postal.model.impl;

import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.exception.SystemException;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.ProxyUtil;
import com.liferay.portal.kernel.util.StringBundler;
import com.liferay.portal.kernel.util.StringPool;
import com.liferay.portal.model.CacheModel;
import com.liferay.portal.model.impl.BaseModelImpl;
import com.liferay.portal.service.ServiceContext;
import com.liferay.portal.util.PortalUtil;

import com.liferay.portlet.expando.model.ExpandoBridge;
import com.liferay.portlet.expando.util.ExpandoBridgeFactoryUtil;

import org.opencps.postal.model.PostalOrder;
import org.opencps.postal.model.PostalOrderModel;

import java.io.Serializable;

import java.sql.Types;

import java.util.Date;
import java.util.HashMap;
import java.util.Map;

/**
 * The base model implementation for the PostalOrder service. Represents a row in the &quot;opencps_postalorder&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface {@link org.opencps.postal.model.PostalOrderModel} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link PostalOrderImpl}.
 * </p>
 *
 * @author nhanhlt
 * @see PostalOrderImpl
 * @see org.opencps.postal.model.PostalOrder
 * @see org.opencps.postal.model.PostalOrderModel
 * @generated
 */
public class PostalOrderModelImpl extends BaseModelImpl<PostalOrder>
	implements PostalOrderModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a postal order model instance should use the {@link org.opencps.postal.model.PostalOrder} interface instead.
	 */
	public static final String TABLE_NAME = "opencps_postalorder";
	public static final Object[][] TABLE_COLUMNS = {
			{ "postalOrderId", Types.BIGINT },
			{ "companyId", Types.BIGINT },
			{ "groupId", Types.BIGINT },
			{ "userId", Types.BIGINT },
			{ "createDate", Types.TIMESTAMP },
			{ "modifiedDate", Types.TIMESTAMP },
			{ "dossierId", Types.BIGINT },
			{ "postalOrderContent", Types.VARCHAR },
			{ "postalOrderStatus", Types.INTEGER }
		};
	public static final String TABLE_SQL_CREATE = "create table opencps_postalorder (postalOrderId LONG not null primary key,companyId LONG,groupId LONG,userId LONG,createDate DATE null,modifiedDate DATE null,dossierId LONG,postalOrderContent VARCHAR(75) null,postalOrderStatus INTEGER)";
	public static final String TABLE_SQL_DROP = "drop table opencps_postalorder";
	public static final String ORDER_BY_JPQL = " ORDER BY postalOrder.postalOrderId DESC, postalOrder.createDate DESC";
	public static final String ORDER_BY_SQL = " ORDER BY opencps_postalorder.postalOrderId DESC, opencps_postalorder.createDate DESC";
	public static final String DATA_SOURCE = "liferayDataSource";
	public static final String SESSION_FACTORY = "liferaySessionFactory";
	public static final String TX_MANAGER = "liferayTransactionManager";
	public static final boolean ENTITY_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.entity.cache.enabled.org.opencps.postal.model.PostalOrder"),
			true);
	public static final boolean FINDER_CACHE_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.finder.cache.enabled.org.opencps.postal.model.PostalOrder"),
			true);
	public static final boolean COLUMN_BITMASK_ENABLED = GetterUtil.getBoolean(com.liferay.util.service.ServiceProps.get(
				"value.object.column.bitmask.enabled.org.opencps.postal.model.PostalOrder"),
			true);
	public static long DOSSIERID_COLUMN_BITMASK = 1L;
	public static long POSTALORDERSTATUS_COLUMN_BITMASK = 2L;
	public static long POSTALORDERID_COLUMN_BITMASK = 4L;
	public static long CREATEDATE_COLUMN_BITMASK = 8L;
	public static final long LOCK_EXPIRATION_TIME = GetterUtil.getLong(com.liferay.util.service.ServiceProps.get(
				"lock.expiration.time.org.opencps.postal.model.PostalOrder"));

	public PostalOrderModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _postalOrderId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setPostalOrderId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _postalOrderId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return PostalOrder.class;
	}

	@Override
	public String getModelClassName() {
		return PostalOrder.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		attributes.put("postalOrderId", getPostalOrderId());
		attributes.put("companyId", getCompanyId());
		attributes.put("groupId", getGroupId());
		attributes.put("userId", getUserId());
		attributes.put("createDate", getCreateDate());
		attributes.put("modifiedDate", getModifiedDate());
		attributes.put("dossierId", getDossierId());
		attributes.put("postalOrderContent", getPostalOrderContent());
		attributes.put("postalOrderStatus", getPostalOrderStatus());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Long postalOrderId = (Long)attributes.get("postalOrderId");

		if (postalOrderId != null) {
			setPostalOrderId(postalOrderId);
		}

		Long companyId = (Long)attributes.get("companyId");

		if (companyId != null) {
			setCompanyId(companyId);
		}

		Long groupId = (Long)attributes.get("groupId");

		if (groupId != null) {
			setGroupId(groupId);
		}

		Long userId = (Long)attributes.get("userId");

		if (userId != null) {
			setUserId(userId);
		}

		Date createDate = (Date)attributes.get("createDate");

		if (createDate != null) {
			setCreateDate(createDate);
		}

		Date modifiedDate = (Date)attributes.get("modifiedDate");

		if (modifiedDate != null) {
			setModifiedDate(modifiedDate);
		}

		Long dossierId = (Long)attributes.get("dossierId");

		if (dossierId != null) {
			setDossierId(dossierId);
		}

		String postalOrderContent = (String)attributes.get("postalOrderContent");

		if (postalOrderContent != null) {
			setPostalOrderContent(postalOrderContent);
		}

		Integer postalOrderStatus = (Integer)attributes.get("postalOrderStatus");

		if (postalOrderStatus != null) {
			setPostalOrderStatus(postalOrderStatus);
		}
	}

	@Override
	public long getPostalOrderId() {
		return _postalOrderId;
	}

	@Override
	public void setPostalOrderId(long postalOrderId) {
		_columnBitmask = -1L;

		_postalOrderId = postalOrderId;
	}

	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_companyId = companyId;
	}

	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_groupId = groupId;
	}

	@Override
	public long getUserId() {
		return _userId;
	}

	@Override
	public void setUserId(long userId) {
		_userId = userId;
	}

	@Override
	public String getUserUuid() throws SystemException {
		return PortalUtil.getUserValue(getUserId(), "uuid", _userUuid);
	}

	@Override
	public void setUserUuid(String userUuid) {
		_userUuid = userUuid;
	}

	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_modifiedDate = modifiedDate;
	}

	@Override
	public long getDossierId() {
		return _dossierId;
	}

	@Override
	public void setDossierId(long dossierId) {
		_columnBitmask |= DOSSIERID_COLUMN_BITMASK;

		if (!_setOriginalDossierId) {
			_setOriginalDossierId = true;

			_originalDossierId = _dossierId;
		}

		_dossierId = dossierId;
	}

	public long getOriginalDossierId() {
		return _originalDossierId;
	}

	@Override
	public String getPostalOrderContent() {
		if (_postalOrderContent == null) {
			return StringPool.BLANK;
		}
		else {
			return _postalOrderContent;
		}
	}

	@Override
	public void setPostalOrderContent(String postalOrderContent) {
		_postalOrderContent = postalOrderContent;
	}

	@Override
	public int getPostalOrderStatus() {
		return _postalOrderStatus;
	}

	@Override
	public void setPostalOrderStatus(int postalOrderStatus) {
		_columnBitmask |= POSTALORDERSTATUS_COLUMN_BITMASK;

		if (!_setOriginalPostalOrderStatus) {
			_setOriginalPostalOrderStatus = true;

			_originalPostalOrderStatus = _postalOrderStatus;
		}

		_postalOrderStatus = postalOrderStatus;
	}

	public int getOriginalPostalOrderStatus() {
		return _originalPostalOrderStatus;
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(getCompanyId(),
			PostalOrder.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public PostalOrder toEscapedModel() {
		if (_escapedModel == null) {
			_escapedModel = (PostalOrder)ProxyUtil.newProxyInstance(_classLoader,
					_escapedModelInterfaces, new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		PostalOrderImpl postalOrderImpl = new PostalOrderImpl();

		postalOrderImpl.setPostalOrderId(getPostalOrderId());
		postalOrderImpl.setCompanyId(getCompanyId());
		postalOrderImpl.setGroupId(getGroupId());
		postalOrderImpl.setUserId(getUserId());
		postalOrderImpl.setCreateDate(getCreateDate());
		postalOrderImpl.setModifiedDate(getModifiedDate());
		postalOrderImpl.setDossierId(getDossierId());
		postalOrderImpl.setPostalOrderContent(getPostalOrderContent());
		postalOrderImpl.setPostalOrderStatus(getPostalOrderStatus());

		postalOrderImpl.resetOriginalValues();

		return postalOrderImpl;
	}

	@Override
	public int compareTo(PostalOrder postalOrder) {
		int value = 0;

		if (getPostalOrderId() < postalOrder.getPostalOrderId()) {
			value = -1;
		}
		else if (getPostalOrderId() > postalOrder.getPostalOrderId()) {
			value = 1;
		}
		else {
			value = 0;
		}

		value = value * -1;

		if (value != 0) {
			return value;
		}

		value = DateUtil.compareTo(getCreateDate(), postalOrder.getCreateDate());

		value = value * -1;

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof PostalOrder)) {
			return false;
		}

		PostalOrder postalOrder = (PostalOrder)obj;

		long primaryKey = postalOrder.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public void resetOriginalValues() {
		PostalOrderModelImpl postalOrderModelImpl = this;

		postalOrderModelImpl._originalDossierId = postalOrderModelImpl._dossierId;

		postalOrderModelImpl._setOriginalDossierId = false;

		postalOrderModelImpl._originalPostalOrderStatus = postalOrderModelImpl._postalOrderStatus;

		postalOrderModelImpl._setOriginalPostalOrderStatus = false;

		postalOrderModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<PostalOrder> toCacheModel() {
		PostalOrderCacheModel postalOrderCacheModel = new PostalOrderCacheModel();

		postalOrderCacheModel.postalOrderId = getPostalOrderId();

		postalOrderCacheModel.companyId = getCompanyId();

		postalOrderCacheModel.groupId = getGroupId();

		postalOrderCacheModel.userId = getUserId();

		Date createDate = getCreateDate();

		if (createDate != null) {
			postalOrderCacheModel.createDate = createDate.getTime();
		}
		else {
			postalOrderCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			postalOrderCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			postalOrderCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		postalOrderCacheModel.dossierId = getDossierId();

		postalOrderCacheModel.postalOrderContent = getPostalOrderContent();

		String postalOrderContent = postalOrderCacheModel.postalOrderContent;

		if ((postalOrderContent != null) && (postalOrderContent.length() == 0)) {
			postalOrderCacheModel.postalOrderContent = null;
		}

		postalOrderCacheModel.postalOrderStatus = getPostalOrderStatus();

		return postalOrderCacheModel;
	}

	@Override
	public String toString() {
		StringBundler sb = new StringBundler(19);

		sb.append("{postalOrderId=");
		sb.append(getPostalOrderId());
		sb.append(", companyId=");
		sb.append(getCompanyId());
		sb.append(", groupId=");
		sb.append(getGroupId());
		sb.append(", userId=");
		sb.append(getUserId());
		sb.append(", createDate=");
		sb.append(getCreateDate());
		sb.append(", modifiedDate=");
		sb.append(getModifiedDate());
		sb.append(", dossierId=");
		sb.append(getDossierId());
		sb.append(", postalOrderContent=");
		sb.append(getPostalOrderContent());
		sb.append(", postalOrderStatus=");
		sb.append(getPostalOrderStatus());
		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		StringBundler sb = new StringBundler(31);

		sb.append("<model><model-name>");
		sb.append("org.opencps.postal.model.PostalOrder");
		sb.append("</model-name>");

		sb.append(
			"<column><column-name>postalOrderId</column-name><column-value><![CDATA[");
		sb.append(getPostalOrderId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>companyId</column-name><column-value><![CDATA[");
		sb.append(getCompanyId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>groupId</column-name><column-value><![CDATA[");
		sb.append(getGroupId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>userId</column-name><column-value><![CDATA[");
		sb.append(getUserId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>createDate</column-name><column-value><![CDATA[");
		sb.append(getCreateDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>modifiedDate</column-name><column-value><![CDATA[");
		sb.append(getModifiedDate());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>dossierId</column-name><column-value><![CDATA[");
		sb.append(getDossierId());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalOrderContent</column-name><column-value><![CDATA[");
		sb.append(getPostalOrderContent());
		sb.append("]]></column-value></column>");
		sb.append(
			"<column><column-name>postalOrderStatus</column-name><column-value><![CDATA[");
		sb.append(getPostalOrderStatus());
		sb.append("]]></column-value></column>");

		sb.append("</model>");

		return sb.toString();
	}

	private static ClassLoader _classLoader = PostalOrder.class.getClassLoader();
	private static Class<?>[] _escapedModelInterfaces = new Class[] {
			PostalOrder.class
		};
	private long _postalOrderId;
	private long _companyId;
	private long _groupId;
	private long _userId;
	private String _userUuid;
	private Date _createDate;
	private Date _modifiedDate;
	private long _dossierId;
	private long _originalDossierId;
	private boolean _setOriginalDossierId;
	private String _postalOrderContent;
	private int _postalOrderStatus;
	private int _originalPostalOrderStatus;
	private boolean _setOriginalPostalOrderStatus;
	private long _columnBitmask;
	private PostalOrder _escapedModel;
}